services:
  vault:
    image: hashicorp/vault:1.15.2
    container_name: vault-dev
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: myroot
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_ADDR: http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - vault-data:/vault/data
      - ./vault/config:/vault/config
      - ./vault/certs:/vault/certs
    command: vault server -dev -dev-root-token-id=myroot -dev-listen-address=0.0.0.0:8200
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  vault-init:
    image: hashicorp/vault:1.15.2
    container_name: vault-init
    depends_on:
      vault:
        condition: service_healthy
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: myroot
    volumes:
      - ./vault/init:/vault/init
    command: >
      sh -c "
        echo 'Waiting for Vault to be ready...'
        sleep 5
      
        echo 'Enabling KV secrets engine...'
        vault secrets enable -path=secret kv-v2
      
        echo 'Creating sample secrets...'
        vault kv put secret/spring-vault-demo \
          app.database.url='jdbc:postgresql://localhost:5432/mydb' \
          app.database.username='myuser' \
          app.api.key='dev-secret-api-key-12345'
      
        vault kv put secret/common \
          app.shared.secret='shared-development-value'
      
        echo 'Enabling cert auth...'
        vault auth enable cert
      
        echo 'Vault initialization completed!'
      "
    restart: "no"

volumes:
  vault-data: